{"version":3,"sources":["_helper.js","data/getTeams.js","data/getPlayerInfo.js","data/getPlayerStats.js","data/getRoster.js","data/sortList.js","components/Page1.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sortName","array","sortValue","sort","a","b","x","name","toUpperCase","y","helper","require","GetTeams","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","teams","inherits","createClass","key","value","_this2","fetch","then","response","json","data","setState","_this3","react_default","createElement","className","ref","map","team","id","temaId","data-id","onClick","updateTeamID","bind","src","concat","alt","React","Component","Captain","player","renderCap","playerId","undefined","API","people","captain","alternateCaptain","rookie","PlayerStats","playerStats","renderStats","stats","splits","stat","pos","goalMod","assMod","gwgMod","shgMod","goals","assists","Math","floor","pim","gameWinningGoals","shortHandedGoals","_this$props","position","score","calcScore","console","log","push","games","points","GetRoster","getTeamRoster","TEAM_ID","prevTeamId","teamId","prevProps","img","href","officialSiteUrl","getRoster_Players","teamSort","Players","event","roster","players","sortType","sortOrdered","parseInt","jerseyNumber","person","fullName","type","sortOrder","data-key","getPlayerInfo_Captain","getPlayerStats_PlayerStats","code","SortList","apply","arguments","menuArray","menuItems","index","length","el","updateSortType","data-name","Page1","selectTeam","ID","assertThisInitialized","window","updateSortOrder","getTeams_GetTeams","sortList_SortList","getRoster_GetRoster","MainPage","Page1_Page1","App","MainPage_MainPage","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+KAEAA,EAAOC,QAAU,CACbC,SAAU,SAASC,EAAOC,GAetB,OAbAD,EAAME,KAAK,SAASC,EAAGC,GACnB,IAAMC,EAAIF,EAAEG,KAAKC,cACXC,EAAIJ,EAAEE,KAAKC,cACjB,OAAIF,EAAIG,GACI,EAERH,EAAIG,EACG,EAEJ,IAIJR,6KCdTS,SAASC,EAAQ,KAKVC,EAAb,SAAAC,GACI,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,MAAO,IAJIR,EADvB,OAAAC,OAAAQ,EAAA,EAAAR,CAAAJ,EAAAC,GAAAG,OAAAS,EAAA,EAAAT,CAAAJ,EAAA,EAAAc,IAAA,oBAAAC,MAAA,WASwB,IAAAC,EAAAV,KAChBW,MAbI,6CAcHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFL,EAAKM,SAAS,CAAEX,MAAOU,EAAKV,YAbxC,CAAAG,IAAA,SAAAC,MAAA,WAiBa,IAAAQ,EAAAjB,KACGK,EAAUL,KAAKI,MAAfC,MAER,OACAa,EAAAhC,EAAAiC,cAAA,eACID,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,YAAYC,IAAI,YAC1B7B,EAAOV,SAASuB,GAAOiB,IAAI,SAAAC,GAAI,OAC5BL,EAAAhC,EAAAiC,cAAA,UACIC,UAAWG,EAAKC,KAAOP,EAAKrB,MAAM6B,OAAS,UAAY,GACvDjB,IAAKe,EAAKC,GACVE,UAASH,EAAKC,GACdG,QAASV,EAAKrB,MAAMgC,aAAaC,KAAK,KAAMN,EAAKC,KACrDN,EAAAhC,EAAAiC,cAAA,OAAKW,IAAG,6EAAAC,OAA+ER,EAAKC,GAApF,QAA8FQ,IAAKT,EAAKlC,gBA7BpIK,EAAA,CAA8BuC,IAAMC,WCNvBC,SAAb,SAAAxC,GAEI,SAAAwC,EAAYvC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,IACftC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTgC,OAAQ,IAJGvC,EAFvB,OAAAC,OAAAQ,EAAA,EAAAR,CAAAqC,EAAAxC,GAAAG,OAAAS,EAAA,EAAAT,CAAAqC,EAAA,EAAA3B,IAAA,oBAAAC,MAAA,WAYQT,KAAKqC,cAZb,CAAA7B,IAAA,YAAAC,MAAA,WAegB,IAAAC,EAAAV,KACR,GAA2B,OAAxBA,KAAKJ,MAAM0C,eAA6CC,IAAxBvC,KAAKJ,MAAM0C,SAAuB,CACjE,IAAME,EAAG,8CAAAT,OAAiD/B,KAAKJ,MAAM0C,SAA5D,KACT3B,MAAM6B,GACD5B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFL,EAAKM,SAAS,CAACoB,OAAQrB,EAAK0B,OAAO,UArBvD,CAAAjC,IAAA,SAAAC,MAAA,WA4BQ,OACIS,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,gBACmB,IAA9BpB,KAAKI,MAAMgC,OAAOM,QAAmBxB,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,OAAhB,KAAiC,IAC/B,IAAvCpB,KAAKI,MAAMgC,OAAOO,iBAA4BzB,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,OAAhB,KAAiC,IAClD,IAA7BpB,KAAKI,MAAMgC,OAAOQ,OAAkB1B,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,UAAhB,UAAyC,QAhC9Fe,EAAA,CAA6BF,IAAMC,YCKtBW,EAAb,SAAAlD,GAEI,SAAAkD,EAAYjD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACfhD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAA1C,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT0C,YAAa,IAJFjD,EAFvB,OAAAC,OAAAQ,EAAA,EAAAR,CAAA+C,EAAAlD,GAAAG,OAAAS,EAAA,EAAAT,CAAA+C,EAAA,EAAArC,IAAA,oBAAAC,MAAA,WAYQT,KAAK+C,gBAZb,CAAAvC,IAAA,cAAAC,MAAA,WAekB,IAAAC,EAAAV,KACV,GAA2B,OAAxBA,KAAKJ,MAAM0C,eAA6CC,IAAxBvC,KAAKJ,MAAM0C,SAAuB,CACjE,IAAME,EAAG,8CAAAT,OAAiD/B,KAAKJ,MAAM0C,SAA5D,kDACT3B,MAAM6B,GACD5B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFL,EAAKM,SAAS,CAAC8B,YAAa/B,EAAKiC,MAAM,GAAGC,OAAO,GAAGC,YArBxE,CAAA1C,IAAA,YAAAC,MAAA,SA2BcqC,EAAaK,GAEf,IAAIC,EAAU,EACVC,EAAS,EAETC,EAAS,EACTC,EAAS,EAgBb,MAfW,MAARJ,IACCC,EAAU,EACVC,EAAS,EACTC,EAAS,EACTC,EAAS,GAIIT,EAAYU,MAAQJ,EACrBN,EAAYW,QAAUJ,EACtBK,KAAKC,MAbR,GAacb,EAAYc,KACvBd,EAAYe,iBAAmBP,EAC/BR,EAAYgB,iBAAmBP,IA9C3D,CAAA/C,IAAA,SAAAC,MAAA,WAoDa,IAECqC,EAAgB9C,KAAKI,MAArB0C,YAFDiB,EAGwB/D,KAAKJ,MAA5BoE,EAHDD,EAGCC,SAAU1B,EAHXyB,EAGWzB,SAEZ2B,EAAQjE,KAAKkE,UAAUpB,EAAakB,GACpC5B,EAAS,GAqBb,MApBgB,MAAb4B,GACCG,QAAQC,IAAI,UACZhC,EAAOiC,KACHnD,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,WAAWZ,IAAK8B,GAA/B,gBAGJF,EAAOiC,KACHnD,EAAAhC,EAAAiC,cAAA,OAAKX,IAAK8B,GACNpB,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,SAAhB,KAA2B0B,EAAYwB,MAAvC,KACApD,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,QAAhB,IAAyB0B,EAAYU,MAArC,KACAtC,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,WAAhB,IAA4B0B,EAAYW,QAAxC,KACAvC,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,UAAhB,IAA2B0B,EAAYyB,OAAvC,KACArD,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,oBAAhB,MAAuC0B,EAAYe,iBAAnD,OACA3C,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,oBAAhB,MAAuC0B,EAAYgB,iBAAnD,OACA5C,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,OAAhB,MAA0B0B,EAAYc,KACtC1C,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,cAAhB,eAA0C6C,KAMlD/C,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,gBACVgB,OAjFjBS,EAAA,CAAiCZ,IAAMC,WCD1BsC,EAAb,SAAA7E,GAEI,SAAA6E,EAAY5E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,IACf3E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0E,GAAArE,KAAAH,KAAMJ,KASV6E,cAAgB,SAAAC,GACZ,GAAe,OAAZA,QAAgCnC,IAAZmC,EAAsB,CACzC,IAAMlC,EAAG,6CAAAT,OAAgD2C,EAAhD,uBACT/D,MAAM6B,GACD5B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFlB,EAAKmB,SAAS,CAACO,KAAMR,EAAKV,MAAM,SAb5CR,EAAKO,MAAQ,CACTmB,KAAM,GACNe,SAAU,GACVqC,WAAY,MAND9E,EAFvB,OAAAC,OAAAQ,EAAA,EAAAR,CAAA0E,EAAA7E,GAAAG,OAAAS,EAAA,EAAAT,CAAA0E,EAAA,EAAAhE,IAAA,oBAAAC,MAAA,WAwBQT,KAAKyE,cAAczE,KAAKJ,MAAMgF,UAxBtC,CAAApE,IAAA,qBAAAC,MAAA,SA2BuBoE,GACX7E,KAAKJ,MAAMgF,SAAWC,EAAUD,QAChC5E,KAAKyE,cAAczE,KAAKJ,MAAMgF,UA7B1C,CAAApE,IAAA,SAAAC,MAAA,WAiCa,IACGc,EAASvB,KAAKI,MAAdmB,KACJuD,OAAkBvC,IAAZhB,EAAKC,GAAmBN,EAAAhC,EAAAiC,cAAA,OAAKW,IAAG,6EAAAC,OAA+ER,EAAKC,GAApF,QAA8FQ,IAAKT,EAAKlC,OAAS,GAC3J,OACI6B,EAAAhC,EAAAiC,cAAA,WAASC,UAAU,QACfF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,QACXF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,UACV0D,EACD5D,EAAAhC,EAAAiC,cAAA,UAAKI,EAAKlC,OAEd6B,EAAAhC,EAAAiC,cAAA,KAAG4D,KAAMxD,EAAKyD,iBAAkBzD,EAAKyD,kBAEzC9D,EAAAhC,EAAAiC,cAAC8D,EAAD,CAAS1D,KAAMA,EAAM2D,SAAUlF,KAAKJ,MAAMsF,gBA7C1DV,EAAA,CAA+BvC,IAAMC,eA2E/BiD,6MAEFrC,YAAc,SAACsC,EAAO9C,GAClB5B,EAAKM,SAAS,CACVsB,SAAU8C,6EAIT,IAAArB,EACsB/D,KAAKJ,MAAxB2B,EADHwC,EACGxC,KAAM2D,EADTnB,EACSmB,SACVG,EAAS,GAWb,OAVoB,OAAhB9D,EAAK8D,aAAmC9C,IAAhBhB,EAAK8D,SAC7BA,EAAS9D,EAAK8D,OAAOA,OApCjC,SAAmBC,EAASC,GAExB,IAAIC,EAAc,KAClB,GAAiB,OAAbD,QAAkChD,IAAbgD,EAAwB,CAC7C,OAAQA,GACJ,IAAK,SACDC,EAAcF,EAAQrG,KAAK,SAACC,EAAGC,GAAJ,OAAUsG,SAASvG,EAAEwG,cAAgBD,SAAStG,EAAEuG,cAAgB,GAAK,IAChG,MACJ,IAAK,OACDF,EAAcF,EAAQrG,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEyG,OAAOC,SAAWzG,EAAEwG,OAAOC,SAAW,GAAK,IAClF,MACJ,IAAK,WACDJ,EAAcF,EAAQrG,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE8E,SAAS6B,KAAO1G,EAAE6E,SAAS6B,KAAQ,GAAK,IAC/E,MACJ,QACIL,EAAcF,EAAQrG,KAAK,SAACC,EAAGC,GAAJ,OAAUsG,SAASvG,EAAEwG,cAAgBD,SAAStG,EAAEuG,cAAgB,GAAK,IAGxG,OAAOF,EACY,OAAbD,IACNC,EAAcF,EAAQrG,KAAK,SAACC,EAAGC,GAAJ,OAAUsG,SAASvG,EAAEwG,cAAgBD,SAAStG,EAAEuG,cAAgB,GAAK,KAiB5FI,CAAUvE,EAAK8D,OAAOA,OAAQH,IAS9BhE,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,oBACViE,EAAO/D,IAAI,SAAAc,GAAM,OACdlB,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,SAASZ,IAAK4B,EAAOuD,OAAOnE,GAAIuE,WAAU3D,EAAOuD,OAAOnE,IAG/DN,EAAAhC,EAAAiC,cAAA,OAAKW,IAAG,+DAAAC,OAAiEK,EAAOuD,OAAOnE,GAA/E,QAAyFQ,IAAKI,EAAOuD,OAAOC,WAExH1E,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,QACXF,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,MAAMgB,EAAOsD,cAC7BxE,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,QAAQgB,EAAOuD,OAAOC,UACtC1E,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,OAAOgB,EAAO4B,SAAS6B,MACvC3E,EAAAhC,EAAAiC,cAAC6E,EAAD,CAAS1D,SAAUF,EAAOuD,OAAOnE,MAErCN,EAAAhC,EAAAiC,cAAC8E,EAAD,CAAa3D,SAAUF,EAAOuD,OAAOnE,GAAIwC,SAAU5B,EAAO4B,SAASkC,kBAnCrEjE,IAAMC,WC9EfiE,SAAb,SAAAxG,GAAA,SAAAwG,IAAA,OAAArG,OAAAC,EAAA,EAAAD,CAAAE,KAAAmG,GAAArG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqG,GAAAC,MAAApG,KAAAqG,YAAA,OAAAvG,OAAAQ,EAAA,EAAAR,CAAAqG,EAAAxG,GAAAG,OAAAS,EAAA,EAAAT,CAAAqG,EAAA,EAAA3F,IAAA,SAAAC,MAAA,WAOQ,IAHA,IAAI6F,EAAY,CAAC,OAAQ,SAAU,YAC/BC,EAAY,GACZT,EAAoC,OAAxB9F,KAAKJ,MAAMsF,SAAoBlF,KAAKJ,MAAMsF,SAAU,SAC3DsB,EAAQ,EAAGA,EAAQF,EAAUG,OAAQD,IAAS,CACnD,IAAME,EAAKJ,EAAUE,GACrBD,EAAUlC,KACNnD,EAAAhC,EAAAiC,cAAA,UACIC,UAAWsF,IAAOZ,EAAY,UAAY,KAC1CD,KAAK,SACLrF,IAAKkG,EACL/E,QAAS3B,KAAKJ,MAAM+G,eAAe9E,KAAK,KAAM6E,GAC9CE,YAAWF,GACVA,IAKb,OACIxF,EAAAhC,EAAAiC,cAAA,WAASC,UAAU,aACfF,EAAAhC,EAAAiC,cAAA,sBACAD,EAAAhC,EAAAiC,cAAA,WACKoF,QAzBrBJ,EAAA,CAA8BlE,IAAMC,YCEvB2E,EAAb,SAAAlH,GACI,SAAAkH,EAAYjH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,IACfhH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAA1G,KAAAH,KAAMJ,KASVkH,WAAa,SAAC1B,EAAO2B,GACjBlH,EAAKmB,SAAS,CACV4D,OAAQmC,IAGZ5C,QAAQC,IAAI,SAAZtE,OAAAkH,EAAA,EAAAlH,QAAAkH,EAAA,EAAAlH,CAAAD,KACAsE,QAAQC,IAAI,WAAY6C,SAhBTpH,EAoBnBqH,gBAAkB,SAAC9B,EAAOG,GACtB1F,EAAKmB,SAAS,CACVkE,SAAUK,KAnBd1F,EAAKO,MAAQ,CACTC,MAAO,GACPuE,OAAQ,KACRM,SAAU,MANCrF,EADvB,OAAAC,OAAAQ,EAAA,EAAAR,CAAA+G,EAAAlH,GAAAG,OAAAS,EAAA,EAAAT,CAAA+G,EAAA,EAAArG,IAAA,SAAAC,MAAA,WA8BQ,OAFA0D,QAAQC,IAAI,eAAgBpE,KAAKJ,OACjCuE,QAAQC,IAAI,eAAgBpE,KAAKI,OAEjCc,EAAAhC,EAAAiC,cAAA,WACID,EAAAhC,EAAAiC,cAAA,WAASC,UAAU,eACfF,EAAAhC,EAAAiC,cAAA,OAAKW,IAAI,oEAAoEE,IAAI,QACjFd,EAAAhC,EAAAiC,cAAA,0BAEJD,EAAAhC,EAAAiC,cAACgG,EAAD,CAAUvF,aAAc5B,KAAK8G,WAAWjF,KAAK,KAAM,GAAIJ,OAAQzB,KAAKI,MAAMwE,SAC1E1D,EAAAhC,EAAAiC,cAACiG,EAAD,CAAUT,eAAgB3G,KAAKkH,gBAAgBrF,KAAK,KAAM,GAAIqD,SAAUlF,KAAKI,MAAM8E,WACnFhE,EAAAhC,EAAAiC,cAACkG,EAAD,CAAWzC,OAAQ5E,KAAKI,MAAMwE,OAAQM,SAAUlF,KAAKI,MAAM8E,gBAtCvE2B,EAAA,CAA2B5E,IAAMC,WCDpBoF,EAAb,SAAA3H,GAAA,SAAA2H,IAAA,OAAAxH,OAAAC,EAAA,EAAAD,CAAAE,KAAAsH,GAAAxH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwH,GAAAlB,MAAApG,KAAAqG,YAAA,OAAAvG,OAAAQ,EAAA,EAAAR,CAAAwH,EAAA3H,GAAAG,OAAAS,EAAA,EAAAT,CAAAwH,EAAA,EAAA9G,IAAA,SAAAC,MAAA,WAEQ,OACIS,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,aAEXF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,QACXF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,UACXF,EAAAhC,EAAAiC,cAACoG,EAAD,aAPxBD,EAAA,CAA8BrF,IAAMC,WCYrBsF,mLARX,OACEtG,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,OACbF,EAAAhC,EAAAiC,cAACsG,EAAD,cAJUvF,aCKEwF,QACW,cAA7BT,OAAOU,SAASC,UAEe,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7G,EAAAhC,EAAAiC,cAAC6G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzH,KAAK,SAAA0H,GACjCA,EAAaC","file":"static/js/main.1b8a0026.chunk.js","sourcesContent":["\n\nmodule.exports = {\n    sortName: function(array, sortValue) {\n\n        array.sort(function(a, b) {\n            const x = a.name.toUpperCase();\n            const y = b.name.toUpperCase();\n            if (x < y) {\n                return -1;\n            }\n            if (x > y) {\n                return 1;\n            }\n            return 0;\n        });\n        \n\n        return array\n\n    }\n}\n","\nimport React from 'react';\n\nimport './teamList.scss';\nconst helper = require('../_helper');\n\nconst API = 'https://statsapi.web.nhl.com/api/v1/teams';\nconst DEFAULT_QUERY = '';\n\nexport class GetTeams extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            teams: [],\n        };\n    }\n\n    componentDidMount() {\n        fetch(API + DEFAULT_QUERY)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({ teams: data.teams })\n        });\n    }\n\n    render() {\n        const { teams } = this.state;\n\n        return (\n        <section>\n            <nav className=\"team-list\" ref=\"teamList\">\n                {helper.sortName(teams).map(team =>\n                    <button\n                        className={team.id === this.props.temaId ? '-active' : ''}\n                        key={team.id} \n                        data-id={team.id} \n                        onClick={this.props.updateTeamID.bind(null, team.id)}>\n                    <img src={`https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/${team.id}.svg`} alt={team.name}/>\n                    {/* {team.name} */}\n                    </button>\n                )}\n            </nav>\n        </section>\n        );\n    }\n}\n","\nimport React from 'react';\n\nexport class Captain extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            player: {}\n        };\n    }\n\n\n    componentDidMount() {\n        this.renderCap();\n    }\n\n    renderCap() {\n        if(this.props.playerId !== null && this.props.playerId !== undefined){\n            const API = `https://statsapi.web.nhl.com/api/v1/people/${this.props.playerId}/`;\n            fetch(API)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({player: data.people[0]})\n                });\n        }\n    }\n\n    render() {\n\n        return(\n            <span className=\"player-info\">\n                {this.state.player.captain === true ? <span className=\"cap\">C</span> : ''}\n                {this.state.player.alternateCaptain === true ? <span className=\"cap\">A</span> : ''}\n                {this.state.player.rookie === true ? <span className=\"rookie\">Rookie</span> : ''}\n            </span>\n\n        );\n\n    }\n}\n","\n\n// https://statsapi.web.nhl.com/api/v1/people/8480012/stats?stats=statsSingleSeason&season=20182019\n// https://statsapi.web.nhl.com/api/v1/people/${this.props.playerId}/stats?stats=statsSingleSeason&season=20182019\n\n\nimport React from 'react';\n\nexport class PlayerStats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playerStats: {}\n        };\n    }\n\n\n    componentDidMount() {\n        this.renderStats();\n    }\n\n    renderStats() {\n        if(this.props.playerId !== null && this.props.playerId !== undefined){\n            const API = `https://statsapi.web.nhl.com/api/v1/people/${this.props.playerId}/stats?stats=statsSingleSeason&season=20182019`;\n            fetch(API)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({playerStats: data.stats[0].splits[0].stat})\n                    // console.log('playerStats: ', data.stats[0].splits[0].stat);\n                });\n        }\n    }\n\n    calcScore(playerStats, pos) {\n    \n            var goalMod = 2;\n            var assMod = 1;\n            var pimMod = 0.5;\n            var gwgMod = 2;\n            var shgMod = 2;\n            if(pos === 'D'){\n                goalMod = 4;\n                assMod = 2;\n                gwgMod = 3;\n                shgMod = 3;\n            }\n\n\n            var goalPoints = playerStats.goals * goalMod;\n            var assPoints = playerStats.assists * assMod;\n            var pimPoints = Math.floor(playerStats.pim * pimMod);\n            var gwgPoints = playerStats.gameWinningGoals * gwgMod;\n            var shgPoints = playerStats.shortHandedGoals * shgMod;\n            \n            var totalPoints = goalPoints + assPoints + pimPoints + gwgPoints + shgPoints;\n            return totalPoints\n        }\n\n    render() {\n\n        var { playerStats } = this.state;\n        var { position, playerId } = this.props;\n\n        var score = this.calcScore(playerStats, position)\n        var player = [];\n        if(position === 'G'){\n            console.log('Goalie')\n            player.push(\n                <div className=\"no-stats\" key={playerId}> No stats </div>\n            )\n        } else{\n            player.push(\n                <div key={playerId}>\n                    <span className=\"games\">GP{playerStats.games} </span>\n                    <span className=\"goal\">G{playerStats.goals} </span>\n                    <span className=\"assists\">A{playerStats.assists} </span>\n                    <span className=\"points\">P{playerStats.points} </span>\n                    <span className=\"gameWinningGoals\">GWG{playerStats.gameWinningGoals} - </span>\n                    <span className=\"shortHandedGoals\">SHG{playerStats.shortHandedGoals} - </span>\n                    <span className=\"pim\">PIM{playerStats.pim}</span>\n                    <span className=\"totalScore\">TotalScore: {score}</span>\n                </div>\n            )\n        }\n\n        return(\n            <div className=\"player-stats\">\n                {player}\n                {/* <span className=\"games\">GP{playerStats.games} </span>\n                <span className=\"goal\">G{playerStats.goals} </span>\n                <span className=\"assists\">A{playerStats.assists} </span>\n                <span className=\"points\">P{playerStats.points} </span>\n                <span className=\"gameWinningGoals\">GWG{playerStats.gameWinningGoals} - </span>\n                <span className=\"shortHandedGoals\">SHG{playerStats.shortHandedGoals} - </span>\n                <span className=\"pim\">PIM{playerStats.pim}</span>\n                <span className=\"totalScore\">TotalScore: {score}</span> */}\n            </div>\n\n        );\n\n    }\n}\n","\nimport React from 'react';\nimport './roster.scss';\n\nimport { Captain } from './getPlayerInfo';\nimport { PlayerStats } from './getPlayerStats';\n\nexport class GetRoster extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            team: [],\n            playerId: {},\n            prevTeamId: null,\n        };\n    }\n\n    getTeamRoster = TEAM_ID => {\n        if(TEAM_ID !== null && TEAM_ID !== undefined){\n            const API = `https://statsapi.web.nhl.com/api/v1/teams/${TEAM_ID}?expand=team.roster`;\n            fetch(API)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({team: data.teams[0]})\n                });\n        }\n    }; \n    \n    componentDidMount() {\n        this.getTeamRoster(this.props.teamId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.teamId !== prevProps.teamId) {\n            this.getTeamRoster(this.props.teamId);\n        }\n    }\n\n    render() {\n        const { team } = this.state;\n        var img = team.id !== undefined ? <img src={`https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/${team.id}.svg`} alt={team.name}/>: '';\n        return (\n            <section className=\"team\">\n                <div className=\"info\">\n                    <div className=\"header\">\n                        {img}\n                        <h1>{team.name}</h1>\n                    </div>\n                    <a href={team.officialSiteUrl}>{team.officialSiteUrl}</a>\n                </div>\n                <Players team={team} teamSort={this.props.teamSort}/>\n            </section>\n        );\n    }\n}\n\nfunction sortOrder(players, sortType) {\n\n    let sortOrdered = null;\n    if (sortType !== null && sortType !== undefined) {\n        switch (sortType) {\n            case 'Number':\n                sortOrdered = players.sort((a, b) => parseInt(a.jerseyNumber) > parseInt(b.jerseyNumber) ? 1 : -1);\n                break;        \n            case 'Name':\n                sortOrdered = players.sort((a, b) => a.person.fullName > b.person.fullName ? 1 : -1);\n                break;\n            case 'Position':\n                sortOrdered = players.sort((a, b) => a.position.type > b.position.type  ? 1 : -1);\n                break;        \n            default:\n                sortOrdered = players.sort((a, b) => parseInt(a.jerseyNumber) > parseInt(b.jerseyNumber) ? 1 : -1);\n                break;\n        }\n        return sortOrdered;\n    } else if(sortType === null){\n        sortOrdered = players.sort((a, b) => parseInt(a.jerseyNumber) > parseInt(b.jerseyNumber) ? 1 : -1);\n    }\n}\n\nclass Players extends React.Component {\n\n    playerStats = (event, playerId) =>{\n        this.setState({\n            playerId: event\n        });\n    }\n\n    render() {\n        const { team, teamSort } = this.props;\n        var roster = [];\n        if (team.roster !== null && team.roster !== undefined) {\n            roster = team.roster.roster;\n            sortOrder(team.roster.roster, teamSort);\n        }\n\n        // var currentPlayerId = null;\n        // if(this.state !== null && this.state.playerId !== null){\n        //     currentPlayerId = this.state.playerId\n        // }\n\n        return (\n            <div className=\"grid roster-list\">\n                {roster.map(player =>\n                    <div className=\"player\" key={player.person.id} data-key={player.person.id}  >\n                        {/* <button type=\"button\" onClick={this.playerStats.bind(null, player.person.id)} > */}\n                            {/* <img src={`https://assets.nhle.com/mugs/nhl/20182019/${team.abbreviation}/${player.person.id}.png`} /> */}\n                            <img src={`https://nhl.bamcontent.com/images/headshots/current/168x168/${player.person.id}.jpg`} alt={player.person.fullName} />\n                        {/* </button> */}\n                        <div className=\"info\">\n                            <span className=\"no\">{player.jerseyNumber}</span>\n                            <span className=\"name\">{player.person.fullName}</span>\n                            <span className=\"pos\">{player.position.type}</span>\n                            <Captain playerId={player.person.id} />\n                        </div>\n                        <PlayerStats playerId={player.person.id} position={player.position.code} />\n                    </div>\n                )}\n\n                \n            </div>\n        );\n    }\n}\n\n","\nimport React from 'react';\nimport './sortList.scss';\n\nexport class SortList extends React.Component {\n\n    render() {\n\n        var menuArray = ['Name', 'Number', 'Position']\n        var menuItems = [];\n        var sortOrder = this.props.teamSort !== null ? this.props.teamSort: 'Number';\n        for (let index = 0; index < menuArray.length; index++) {\n            const el = menuArray[index];\n            menuItems.push(\n                <button \n                    className={el === sortOrder ? '-active' : null}\n                    type=\"button\" \n                    key={el} \n                    onClick={this.props.updateSortType.bind(null, el)} \n                    data-name={el}>\n                    {el}\n                </button>\n            )\n            \n        }\n        return (\n            <section className=\"sort-list\">\n                <span>Sort: </span>\n                <nav>\n                    {menuItems}\n                </nav>\n            </section>\n        );\n    }\n}","import React from 'react';\n\nimport { GetTeams } from '../data/getTeams';\nimport { GetRoster } from '../data/getRoster';\nimport { SortList } from '../data/sortList';\n\nexport class Page1 extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            teams: [],\n            teamId: null,\n            teamSort: null,\n        };\n    }\n\n    selectTeam = (event, ID) =>{\n        this.setState({\n            teamId: ID\n        });\n\n        console.log('this: ', this);\n        console.log('window: ', window);\n        // window.scrollTo(0, this.myRef.current.offsetTop)\n    }\n\n    updateSortOrder = (event, sortType) =>{\n        this.setState({\n            teamSort: sortType\n        });\n    }\n\n    render() {\n        console.log('this.props: ', this.props);\n        console.log('this.state: ', this.state);\n        return (\n        <div>\n            <section className=\"page-header\">\n                <img src=\"https://www-league.nhlstatic.com/images/logos/league-dark/133.svg\" alt=\"NHL\"/>\n                <h1>NHL 2018/19</h1>\n            </section>\n            <GetTeams updateTeamID={this.selectTeam.bind(null, 1)} temaId={this.state.teamId} />\n            <SortList updateSortType={this.updateSortOrder.bind(null, 1)} teamSort={this.state.teamSort} />\n            <GetRoster teamId={this.state.teamId} teamSort={this.state.teamSort}/>\n        </div>\n        );\n    }\n}\n","import React from 'react';\n// import { Nav } from './Nav';\nimport { Page1 } from './Page1';\n\n\nexport class MainPage extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                {/* <Nav/> */}\n                <div className=\"grid\">\n                    <div className=\"col-12\">\n                        <Page1 />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n// import './App.scss';\nimport './styles/core.scss'\nimport { MainPage } from './components/MainPage';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MainPage/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// import logo from './logo.svg';\n/* <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <p>\n      Edit <code>src/App.js</code> and save to reload.\n    </p>\n    <a\n      className=\"App-link\"\n      href=\"https://reactjs.org\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Learn React\n    </a>\n  </header> */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}