{"version":3,"sources":["_helper.js","data/getTeams.js","data/getPlayerInfo.js","data/getPlayerStats.js","data/getRoster.js","data/sortList.js","components/Page1.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sortName","array","sortValue","sort","a","b","x","name","toUpperCase","y","helper","require","GetTeams","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","teams","inherits","createClass","key","value","_this2","fetch","then","response","json","data","setState","_this3","react_default","createElement","className","map","team","id","temaId","data-id","onClick","updateTeamID","bind","src","concat","alt","React","Component","Captain","player","renderCap","playerId","undefined","API","people","captain","alternateCaptain","rookie","PlayerStats","renderStats","GetRoster","getTeamRoster","TEAM_ID","prevTeamId","teamId","prevProps","img","href","officialSiteUrl","getRoster_Players","teamSort","Players","playerStats","event","_this$props","roster","players","sortType","sortOrdered","parseInt","jerseyNumber","person","fullName","position","type","sortOrder","currentPlayerId","data-key","getPlayerInfo_Captain","getPlayerStats_PlayerStats","SortList","apply","arguments","menuArray","menuItems","index","length","el","push","updateSortType","data-name","Page1","updateID","ID","updateSort","console","log","getTeams_GetTeams","sortList_SortList","getRoster_GetRoster","MainPage","Page1_Page1","App","MainPage_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.844d2e79.chunk.js","sourcesContent":["\n\nmodule.exports = {\n    sortName: function(array, sortValue) {\n\n        array.sort(function(a, b) {\n            const x = a.name.toUpperCase();\n            const y = b.name.toUpperCase();\n            if (x < y) {\n                return -1;\n            }\n            if (x > y) {\n                return 1;\n            }\n            return 0;\n        });\n        \n\n        return array\n\n    }\n}\n","\nimport React from 'react';\n\nimport './teamList.scss';\nconst helper = require('../_helper');\n\nconst API = 'https://statsapi.web.nhl.com/api/v1/teams';\nconst DEFAULT_QUERY = '';\n\nexport class GetTeams extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            teams: [],\n        };\n    }\n\n    componentDidMount() {\n        fetch(API + DEFAULT_QUERY)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({ teams: data.teams })\n        });\n    }\n\n    render() {\n        const { teams } = this.state;\n\n        return (\n        <section>\n            <nav className=\"team-list\">\n                {helper.sortName(teams).map(team =>\n                    <button\n                        className={team.id === this.props.temaId ? '-active' : ''}\n                        key={team.id} \n                        data-id={team.id} \n                        onClick={this.props.updateTeamID.bind(null, team.id)}>\n                    <img src={`https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/${team.id}.svg`} alt={team.name}/>\n                    {/* {team.name} */}\n                    </button>\n                )}\n            </nav>\n        </section>\n        );\n    }\n}\n","\nimport React from 'react';\n\nexport class Captain extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            player: {}\n        };\n    }\n\n\n    componentDidMount() {\n        this.renderCap();\n    }\n\n    renderCap() {\n        if(this.props.playerId !== null && this.props.playerId !== undefined){\n            const API = `https://statsapi.web.nhl.com/api/v1/people/${this.props.playerId}/`;\n            fetch(API)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({player: data.people[0]})\n                });\n        }\n    }\n\n    render() {\n\n        return(\n            <span className=\"player-info\">\n                {this.state.player.captain === true ? <span className=\"cap\">C</span> : ''}\n                {this.state.player.alternateCaptain === true ? <span className=\"cap\">A</span> : ''}\n                {this.state.player.rookie === true ? <span className=\"rookie\">Rookie</span> : ''}\n            </span>\n\n        );\n\n    }\n}\n","\n\n// https://statsapi.web.nhl.com/api/v1/people/8480012/stats?stats=statsSingleSeason&season=20182019\n// https://statsapi.web.nhl.com/api/v1/people/${this.props.playerId}/stats?stats=statsSingleSeason&season=20182019\n\n\nimport React from 'react';\n\nexport class PlayerStats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            player: {}\n        };\n    }\n\n\n    componentDidMount() {\n        this.renderStats();\n    }\n\n    renderStats() {\n        if(this.props.playerId !== null && this.props.playerId !== undefined){\n            const API = `https://statsapi.web.nhl.com/api/v1/people/${this.props.playerId}/stats?stats=statsSingleSeason&season=20182019`;\n            fetch(API)\n                .then(response => response.json())\n                .then(data => {\n                    // this.setState({player: data.stats[0]})\n                    // console.log('playerStats: ', data.stats[0]);\n                });\n        }\n    }\n\n    render() {\n\n        return(\n            <span className=\"player-info\">\n                {/* {this.state.player.captain === true ? <span className=\"cap\">C</span> : ''}\n                {this.state.player.alternateCaptain === true ? <span className=\"cap\">A</span> : ''}\n                {this.state.player.rookie === true ? <span className=\"rookie\">Rookie</span> : ''} */}\n            </span>\n\n        );\n\n    }\n}\n","\nimport React from 'react';\nimport './roster.scss';\n\nimport { Captain } from './getPlayerInfo';\nimport { PlayerStats } from './getPlayerStats';\n\nexport class GetRoster extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            team: [],\n            playerId: {},\n            prevTeamId: null,\n        };\n    }\n\n    getTeamRoster = TEAM_ID => {\n        if(TEAM_ID !== null && TEAM_ID !== undefined){\n            const API = `https://statsapi.web.nhl.com/api/v1/teams/${TEAM_ID}?expand=team.roster`;\n            fetch(API)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({team: data.teams[0]})\n                });\n        }\n    }; \n    \n    componentDidMount() {\n        this.getTeamRoster(this.props.teamId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.teamId !== prevProps.teamId) {\n            this.getTeamRoster(this.props.teamId);\n        }\n    }\n\n    render() {\n        const { team } = this.state;\n        var img = team.id !== undefined ? <img src={`https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/${team.id}.svg`} alt={team.name}/>: '';\n        return (\n            <section className=\"team\">\n                <div className=\"info\">\n                    <div className=\"header\">\n                        {img}\n                        <h1>{team.name}</h1>\n                    </div>\n                    <a href={team.officialSiteUrl}>{team.officialSiteUrl}</a>\n                </div>\n                <Players team={team} teamSort={this.props.teamSort}/>\n            </section>\n        );\n    }\n}\n\nfunction sortOrder(players, sortType) {\n\n    let sortOrdered = null;\n    if (sortType !== null && sortType !== undefined) {\n        switch (sortType) {\n            case 'Number':\n                sortOrdered = players.sort((a, b) => parseInt(a.jerseyNumber) > parseInt(b.jerseyNumber) ? 1 : -1);\n                break;        \n            case 'Name':\n                sortOrdered = players.sort((a, b) => a.person.fullName > b.person.fullName ? 1 : -1);\n                break;\n            case 'Position':\n                sortOrdered = players.sort((a, b) => a.position.type > b.position.type  ? 1 : -1);\n                break;        \n            default:\n                sortOrdered = players.sort((a, b) => parseInt(a.jerseyNumber) > parseInt(b.jerseyNumber) ? 1 : -1);\n                break;\n        }\n        return sortOrdered;\n    } else if(sortType === null){\n        sortOrdered = players.sort((a, b) => parseInt(a.jerseyNumber) > parseInt(b.jerseyNumber) ? 1 : -1);\n    }\n}\n\nclass Players extends React.Component {\n\n    playerStats = (event, playerId) =>{\n        this.setState({\n            playerId: event\n        });\n    }\n\n    render() {\n        const { team, teamSort } = this.props;\n        var roster = [];\n        if (team.roster !== null && team.roster !== undefined) {\n            roster = team.roster.roster;\n            sortOrder(team.roster.roster, teamSort);\n        }\n\n        var currentPlayerId = null;\n        if(this.state !== null && this.state.playerId !== null){\n            currentPlayerId = this.state.playerId\n        }\n\n        return (\n            <div className=\"grid roster-list\">\n                {roster.map(player =>\n                    <div className=\"player\" key={player.person.id} data-key={player.person.id}  >\n                        {/* <button type=\"button\" onClick={this.playerStats.bind(null, player.person.id)} > */}\n                            {/* <img src={`https://assets.nhle.com/mugs/nhl/20182019/${team.abbreviation}/${player.person.id}.png`} /> */}\n                            <img src={`https://nhl.bamcontent.com/images/headshots/current/168x168/${player.person.id}.jpg`} alt={player.person.fullName} />\n                        {/* </button> */}\n                        <div className=\"info\">\n                            <span className=\"no\">{player.jerseyNumber}</span>\n                            <span className=\"name\">{player.person.fullName}</span>\n                            <span className=\"pos\">{player.position.type}</span>\n                            <Captain playerId={player.person.id} />\n                        </div>\n                        <PlayerStats playerId={currentPlayerId} />\n                    </div>\n                )}\n\n                \n            </div>\n        );\n    }\n}\n\n","\nimport React from 'react';\nimport './sortList.scss';\n\nexport class SortList extends React.Component {\n\n    render() {\n\n        var menuArray = ['Name', 'Number', 'Position']\n        var menuItems = [];\n        var sortOrder = this.props.teamSort !== null ? this.props.teamSort: 'Number';\n        for (let index = 0; index < menuArray.length; index++) {\n            const el = menuArray[index];\n            menuItems.push(\n                <button \n                    className={el === sortOrder ? '-active' : null}\n                    type=\"button\" \n                    key={el} \n                    onClick={this.props.updateSortType.bind(null, el)} \n                    data-name={el}>\n                    {el}\n                </button>\n            )\n            \n        }\n        return (\n            <section className=\"sort-list\">\n                <span>Sort: </span>\n                <nav>\n                    {menuItems}\n                </nav>\n            </section>\n        );\n    }\n}","import React from 'react';\n\nimport { GetTeams } from '../data/getTeams';\nimport { GetRoster } from '../data/getRoster';\nimport { SortList } from '../data/sortList';\n\nexport class Page1 extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            teams: [],\n            teamId: null,\n            teamSort: null,\n        };\n    }\n\n    updateID = (event, ID) =>{\n        this.setState({\n            teamId: ID\n        });\n    }\n\n    updateSort = (event, sortType) =>{\n        this.setState({\n            teamSort: sortType\n        });\n    }\n\n    render() {\n        console.log('this.props: ', this.props);\n        console.log('this.state: ', this.state);\n        return (\n        <div>\n            <section className=\"page-header\">\n                <img src=\"https://www-league.nhlstatic.com/images/logos/league-dark/133.svg\" alt=\"NHL\"/>\n                <h1>NHL 2018/19</h1>\n            </section>\n            <GetTeams updateTeamID={this.updateID.bind(null, 1)} temaId={this.state.teamId} />\n            <SortList updateSortType={this.updateSort.bind(null, 1)} teamSort={this.state.teamSort} />\n            <GetRoster teamId={this.state.teamId} teamSort={this.state.teamSort}/>\n        </div>\n        );\n    }\n}\n","import React from 'react';\n// import { Nav } from './Nav';\nimport { Page1 } from './Page1';\n\n\nexport class MainPage extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                {/* <Nav/> */}\n                <div className=\"grid\">\n                    <div className=\"col-12\">\n                        <Page1 />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n// import './App.scss';\nimport './styles/core.scss'\nimport { MainPage } from './components/MainPage';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MainPage/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// import logo from './logo.svg';\n/* <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <p>\n      Edit <code>src/App.js</code> and save to reload.\n    </p>\n    <a\n      className=\"App-link\"\n      href=\"https://reactjs.org\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Learn React\n    </a>\n  </header> */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}