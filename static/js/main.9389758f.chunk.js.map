{"version":3,"sources":["_helper.js","data/getTeams.js","data/getPlayerInfo.js","data/getPlayerStats.js","data/getRoster.js","data/sortList.js","components/Page1.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["helpers","sortName","array","sort","a","b","x","name","toUpperCase","y","rosterSortPos","this","rosterSortNumber","goalie","filter","player","position","type","defenseman","forward","rosterSortFullName","person","fullName","parseInt","jerseyNumber","GetTeams","props","state","teams","fetch","then","response","json","data","setState","className","ref","helper","map","team","id","temaId","key","data-id","onClick","updateTeamID","bind","src","alt","React","Component","Captain","renderCap","playerId","undefined","API","people","captain","alternateCaptain","rookie","PlayerStats","playerStats","renderStats","stats","splits","stat","pos","goalMod","assMod","gwgMod","shgMod","goals","assists","Math","floor","pim","gameWinningGoals","shortHandedGoals","playerValue","score","calcScore","valuePerPoint","push","playerPoints","parseFloat","toFixed","games","points","GetRoster","getTeamRoster","TEAM_ID","teamValueList","require","find","item","cleanName","teamName","teamValues","i","element","roster","elmentPlayer","match","value","replace","trim","length","prevTeamId","rawName","toLowerCase","split","join","teamId","prevProps","img","href","officialSiteUrl","teamSort","Players","event","players","sortType","sortOrdered","sortOrder","data-key","code","SortList","sortContainer","menuArray","menuItems","index","el","updateSortType","data-name","Page1","selectTeam","ID","updateSortOrder","MainPage","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9389758f.chunk.js","sourcesContent":["\nconst helpers = {\n    sortName(array) { \n        array.sort(function(a, b) {\n            const x = a.name.toUpperCase();\n            const y = b.name.toUpperCase();\n            if (x < y) {\n                return -1;\n            }\n            if (x > y) {\n                return 1;\n            }\n            return 0;\n        });\n\n        return array\n    },\n    rosterSortPos(array) {\n        //sub sort by number first\n        this.rosterSortNumber(array);\n        let goalie = array.filter(player => player.position.type === \"Goalie\");\n        let defenseman = array.filter(player => player.position.type === \"Defenseman\");\n        let forward = array.filter(player => player.position.type === \"Forward\");\n        let sortedArray = [...goalie, ...defenseman, ...forward];\n        return sortedArray;\n    },\n    rosterSortFullName(array) {\n        array.sort(function(a, b) {\n            const x = a.person.fullName.toUpperCase();\n            const y = b.person.fullName.toUpperCase();\n            if (x < y) {\n                return -1;\n            }\n            if (x > y) {\n                return 1;\n            }\n            return 0;\n        });\n\n        return array\n    },\n    rosterSortNumber(array) {\n        array.sort(function(a, b) {\n            const x = parseInt(a.jerseyNumber.toUpperCase());\n            const y = parseInt(b.jerseyNumber.toUpperCase());\n            if (x < y) {\n                return -1;\n            }\n            if (x > y) {\n                return 1;\n            }\n            return 0;\n        });\n\n        return array\n    }\n}\n\nexport default helpers","\nimport React from 'react';\n\nimport './teamList.scss';\n// const helper = require('../_helper');\nimport helper from '../_helper'\n\nconst API = 'https://statsapi.web.nhl.com/api/v1/teams';\nconst DEFAULT_QUERY = '';\n\nexport class GetTeams extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            teams: [],\n        };\n    }\n\n    componentDidMount() {\n        fetch(API + DEFAULT_QUERY)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({ teams: data.teams })\n        });\n    }\n\n    render() {\n        const { teams } = this.state;\n\n        return (\n        <section>\n            <nav className=\"team-list\" ref=\"teamList\">\n                {helper.sortName(teams).map(team =>\n                    <button\n                        className={team.id === this.props.temaId ? '-active' : ''}\n                        key={team.id} \n                        data-id={team.id} \n                        onClick={this.props.updateTeamID.bind(null, team.id)}>\n                    <img src={`https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/${team.id}.svg`} alt={team.name}/>\n                    {/* {team.name} */}\n                    </button>\n                )}\n            </nav>\n        </section>\n        );\n    }\n}\n","\nimport React from 'react';\n\nexport class Captain extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            player: {}\n        };\n    }\n\n\n    componentDidMount() {\n        this.renderCap();\n    }\n\n    renderCap() {\n        if(this.props.playerId !== null && this.props.playerId !== undefined){\n            const API = `https://statsapi.web.nhl.com/api/v1/people/${this.props.playerId}/`;\n            fetch(API)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({player: data.people[0]})\n                });\n        }\n    }\n\n    render() {\n\n        return(\n            <span className=\"player-info\">\n                {this.state.player.captain === true ? <span className=\"cap\">C</span> : ''}\n                {this.state.player.alternateCaptain === true ? <span className=\"cap\">A</span> : ''}\n                {this.state.player.rookie === true ? <span className=\"rookie\">Rookie</span> : ''}\n            </span>\n\n        );\n\n    }\n}\n","\n\n// https://statsapi.web.nhl.com/api/v1/people/8480012/stats?stats=statsSingleSeason&season=20182019\n// https://statsapi.web.nhl.com/api/v1/people/${this.props.playerId}/stats?stats=statsSingleSeason&season=20182019\n\n\nimport React from 'react';\n\nexport class PlayerStats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playerStats: {}\n        };\n    }\n\n\n    componentDidMount() {\n        this.renderStats();\n    }\n\n    renderStats() {\n        if(this.props.playerId !== null && this.props.playerId !== undefined){\n            const API = `https://statsapi.web.nhl.com/api/v1/people/${this.props.playerId}/stats?stats=statsSingleSeason&season=20182019`;\n            fetch(API)\n                .then(response => response.json())\n                .then(data => {\n                    if(data.stats[0].splits[0] !== undefined){\n                        this.setState({playerStats: data.stats[0].splits[0].stat})\n                    }else{\n                        // console.log('data.stats[0]: ', data.stats[0]);\n                    }\n                });\n        }\n    }\n    \n\n    calcScore(playerStats, pos) {\n            var goalMod = 2;\n            var assMod = 1;\n            var pimMod = 0.5;\n            var gwgMod = 2;\n            var shgMod = 2;\n            if(pos === 'D'){\n                goalMod = 4;\n                assMod = 2;\n                gwgMod = 3;\n                shgMod = 3;\n            }\n\n            var goalPoints = playerStats.goals * goalMod;\n            var assPoints = playerStats.assists * assMod;\n            var pimPoints = Math.floor(playerStats.pim * pimMod);\n            var gwgPoints = playerStats.gameWinningGoals * gwgMod;\n            var shgPoints = playerStats.shortHandedGoals * shgMod;\n\n            var totalPoints = goalPoints + assPoints + pimPoints + gwgPoints + shgPoints;\n\n            return totalPoints\n        }\n\n    render() {\n\n        var { playerStats } = this.state;\n        // console.log('playerStats :', playerStats);\n        var { position, playerId, playerValue } = this.props;\n\n        // console.log('playerValue: ', playerValue);\n\n        \n        var score = this.calcScore(playerStats, position)\n        var valuePerPoint = null\n        var player = [];\n        if(position === 'G'){\n            player.push(\n                <div className=\"no-stats\" key={playerId}> No stats available</div>\n            )\n        } else{\n\n            var playerPoints = [];\n            if (score) {\n                playerPoints.push(\n                    <span key={playerId + '_score'} className=\"totalScore\">TotalScore: <span className=\" -txt-l\">{score}</span></span>\n                )\n            }\n            if (playerValue !== null){\n                playerValue += ' MSEK'\n                playerPoints.push(\n                    <span key={playerId + '_playerValue'} className=\"playerValue\"><span className=\" -txt-xl\">{playerValue}</span></span>\n                )\n            }else{\n                playerPoints.push(\n                    <span>-No data found-</span>\n                )\n            }\n            valuePerPoint = (parseInt(score)/parseFloat(playerValue)).toFixed(1);\n            if (valuePerPoint >= 0) {\n                playerPoints.push(\n                    <span key={playerId + '_valuePerPoint'} className=\"valuePerPoint\">Points/MSEK <span className=\" -txt-xl\">{valuePerPoint}</span></span>\n                )\n            }\n\n            player.push(\n                <div key={playerId}>\n                    <span className=\"games\">GP{playerStats.games} </span>\n                    <span className=\"goal\">G{playerStats.goals} </span>\n                    <span className=\"assists\">A{playerStats.assists} </span>\n                    <span className=\"points\">P{playerStats.points} </span>\n                    <span className=\"gameWinningGoals\"> - GWG{playerStats.gameWinningGoals} </span>\n                    <span className=\"shortHandedGoals\">SHG{playerStats.shortHandedGoals} </span>\n                    <span className=\"pim\">PIM{playerStats.pim}</span>\n                    {/* <div className=\"score-wrapper\">\n                        {playerPoints}\n                    </div> */}\n                </div>\n            )\n        }\n\n        return(\n            <div className=\"player-stats\">\n                {player}\n            </div>\n\n        );\n\n    }\n}\n","\nimport React from 'react';\nimport './roster.scss';\n\nimport { Captain } from './getPlayerInfo';\nimport { PlayerStats } from './getPlayerStats';\nimport helper from '../_helper';\n\nexport class GetRoster extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            team: [],\n            playerId: {},\n            prevTeamId: null,\n            teamValues: null\n        };\n    }\n\n    getTeamRoster = TEAM_ID => {\n        if(TEAM_ID !== null && TEAM_ID !== undefined){\n            const API = `https://statsapi.web.nhl.com/api/v1/teams/${TEAM_ID}?expand=team.roster`;\n            fetch(API)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({team: data.teams[0]})\n\n                    const playerValue = require('./playerValue.json');\n                    const teamValueList = playerValue.find( item => this.cleanName(item.teamName) === this.cleanName(data.teams[0].name));\n                    this.setState({teamValues: teamValueList});\n                    const compareArray = [teamValueList.player, data.teams[0]];\n                    return compareArray;\n\n                }).then((item) =>{\n\n                    for (let i = 0; i < item[1].roster.roster.length; i++) {\n                        const element = item[1].roster.roster[i];\n                        const elmentPlayer = this.cleanName(element.person.fullName);\n                        const match = item[0].find(item => this.cleanName(item.name) === elmentPlayer);\n                        \n                        if (match) {\n                            element.value = match.value.replace(',','.').replace('MSEK','').trim();\n                        } else{\n                            element.value = null;\n                        }\n                    }\n                    this.setState({team: item[1]})\n                });\n        }\n    };\n    \n    cleanName(rawName) {\n        var trimName = rawName.toLowerCase().replace(' ', '').replace('á', 'a').replace('å', 'a').replace('ä', 'a').replace('ö', 'o').replace('.', '').replace('é', 'e').split(' ').join('').split('.').join('');\n        return trimName;\n    }\n\n    componentDidMount() {\n        this.getTeamRoster(this.props.teamId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.teamId !== prevProps.teamId) {\n            this.getTeamRoster(this.props.teamId);\n        }\n    }\n\n    render() {\n        const { team } = this.state;\n        var img = team.id !== undefined ? <img src={`https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/${team.id}.svg`} alt={team.name}/>: '';\n        return (\n            <section className=\"team\">\n                <div className=\"info\">\n                    <div className=\"header\">\n                        {img}\n                        <h1>{team.name}</h1>\n                    </div>\n                    <a href={team.officialSiteUrl}>{team.officialSiteUrl}</a>\n                </div>\n                <Players team={team} teamSort={this.props.teamSort}/>\n            </section>\n        );\n    }\n}\n\nfunction sortOrder(players, sortType) {\n\n    let sortOrdered = null;\n    switch (sortType) {\n        case 'Position':\n            sortOrdered = helper.rosterSortPos(players);\n            break;\n    \n        case 'Name':\n            sortOrdered = helper.rosterSortFullName(players);\n            break;\n    \n        case 'Number':\n            sortOrdered = helper.rosterSortNumber(players);\n            break;\n    \n        default:\n            sortOrdered = helper.rosterSortPos(players);\n            break;\n        }\n\n    return sortOrdered;\n}\n\nclass Players extends React.Component {\n\n    playerStats = (event, playerId) =>{\n        this.setState({\n            playerId: event\n        });\n    }\n\n    render() {\n        const { team, teamSort } = this.props;\n        var roster = [];\n        if (team.roster !== null && team.roster !== undefined) {\n            roster = sortOrder(team.roster.roster, teamSort);\n        }\n\n        return (\n            <div className=\"grid roster-list\">\n                {roster.map(player =>\n                    <div className=\"player\" key={player.person.id} data-key={player.person.id}  >\n                        <img src={`https://nhl.bamcontent.com/images/headshots/current/168x168/${player.person.id}.jpg`} alt={player.person.fullName} />\n                        <div className=\"info\">\n                            <span className=\"no\">{player.jerseyNumber}</span>\n                            <span className=\"name\">{player.person.fullName}</span>\n                            <span className=\"pos\">{player.position.type}</span>\n                            <Captain playerId={player.person.id} />\n                        </div>\n                        <PlayerStats playerId={player.person.id} position={player.position.code} teamName={team.name} playerValue={player.value} />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\n","\nimport React from 'react';\nimport './sortList.scss';\n\nexport class SortList extends React.Component {\n\n    render() {\n\n        let sortContainer = null;\n        if(this.props.teamId) {\n            var menuArray = ['Name', 'Number', 'Position']\n            var menuItems = [];\n            var sortOrder = this.props.teamSort !== null ? this.props.teamSort: 'Position';\n\n            for (let index = 0; index < menuArray.length; index++) {\n                const el = menuArray[index];\n                menuItems.push(\n                    <button \n                        className={el === sortOrder ? '-active' : null}\n                        type=\"button\" \n                        key={el} \n                        onClick={this.props.updateSortType.bind(null, el)} \n                        data-name={el}>\n                        {el}\n                    </button>\n                )\n            }\n\n            sortContainer = \n                <section className=\"sort-list\">\n                    <span>Sort: </span>\n                    <nav>\n                        {menuItems}\n                    </nav>\n                </section>;\n        }\n\n        return sortContainer;\n\n    }\n}\n","import React from 'react';\n\nimport { GetTeams } from '../data/getTeams';\nimport { GetRoster } from '../data/getRoster';\nimport { SortList } from '../data/sortList';\n\nexport class Page1 extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            teams: [],\n            teamId: null,\n            teamSort: null,\n        };\n    }\n\n    selectTeam = (event, ID) =>{\n        this.setState({\n            teamId: ID\n        });\n    }\n\n    updateSortOrder = (event, sortType) =>{\n        this.setState({\n            teamSort: sortType\n        });\n    }\n\n    render() {\n        const { teamId, teamSort } = this.state;\n        return (\n        <div>\n            <section className=\"page-header\">\n                <img src=\"https://www-league.nhlstatic.com/images/logos/league-dark/133.svg\" alt=\"NHL\"/>\n                <h1>NHL 2018/19</h1>\n            </section>\n            <GetTeams updateTeamID={this.selectTeam.bind(null, 1)} temaId={teamId} />\n            <SortList updateSortType={this.updateSortOrder.bind(null, 1)} teamSort={teamSort} teamId={teamId} />\n            <GetRoster teamId={teamId} teamSort={teamSort}/>\n        </div>\n        );\n    }\n}\n","import React from 'react';\n// import { Nav } from './Nav';\nimport { Page1 } from './Page1';\n\n\nexport class MainPage extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                {/* <Nav/> */}\n                <div className=\"grid\">\n                    <div className=\"col-12\">\n                        <Page1 />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n// import './App.scss';\nimport './styles/core.scss'\nimport { MainPage } from './components/MainPage';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MainPage/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// import logo from './logo.svg';\n/* <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <p>\n      Edit <code>src/App.js</code> and save to reload.\n    </p>\n    <a\n      className=\"App-link\"\n      href=\"https://reactjs.org\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Learn React\n    </a>\n  </header> */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}